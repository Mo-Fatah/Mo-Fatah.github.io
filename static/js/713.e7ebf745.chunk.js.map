{"version":3,"file":"static/js/713.e7ebf745.chunk.js","mappings":"wIAmBA,IAhBuB,SAAH,OAAMA,EAAW,EAAXA,YAAaC,EAAM,EAANA,OAAQC,EAAK,EAALA,MAAK,OAClD,mBACEC,UAAS,sBAAiBF,EAAOC,GAAS,qBAAuB,IACjEE,KAAK,SACLC,QAAS,kBAAML,EAAYE,EAAM,EAAC,SAEjCA,GACM,C,0JCkBLI,EAAa,yCAAG,2FACS,OAAvBC,EAAU,IAAIC,EAAAA,GAAU,EAAD,OAEVD,EAAQE,QA7Bf,qDA6B8B,CACxCC,SAAU,MACT,KAAD,EAFQ,OAAJC,EAAI,yBAIcA,EAAKC,KAAKC,MA9B7BC,KAAI,SAACC,GACR,IAAMC,EAAWD,EAAKE,eAAeC,MAAM,KACrCC,EAAWH,EAASA,EAASI,OAAS,GACtCC,EAAUN,EAAKE,eAAeK,QAAQ,OAAQ,IAAIA,QAAQ,SAAU,IAC1E,OAAIP,EAAKQ,aACA,CACLnB,KAAM,KACNoB,IAAKT,EAAKU,SACVC,MAAOX,EAAKW,MACZC,KAAMR,EACNS,SAAUP,GAGP,CACLjB,KAAM,QACNoB,IAAKT,EAAKU,SACVC,MAAOX,EAAKW,MACZC,KAAMR,EACNS,SAAUP,EAEd,KAUwC,2CACzC,kBARkB,mCAUnB,I,mBC/BMQ,EAAoB,SAAH,OAAMC,EAAY,EAAZA,aAAcC,EAAM,EAANA,OAAM,OAC/C,cAAG5B,UAAS,oBAAe2B,EAAe,aAAe,IAAK,SAAEC,GAAW,EA8D7E,EA3DmB,WACjB,OAAgCC,EAAAA,EAAAA,UAAS,MAAK,eAAvCpB,EAAI,KAAEqB,EAAe,KAC5B,GAAkCD,EAAAA,EAAAA,WAAS,GAAM,eAA1CE,EAAS,KAAEC,EAAY,KAC9B,GAAoCH,EAAAA,EAAAA,UAASpB,GAAK,eAA3CwB,EAAU,KAAEC,EAAa,KAEhCC,YAAW,WACTH,GAAcD,EAChB,GAAG,KAEH,IAAMK,GAAYC,EAAAA,EAAAA,cAAW,uBAAC,yGACVlC,IAAgB,KAAD,EAA3BmC,EAAG,OACTR,EAAgBQ,GAChBJ,EAAcI,GAAK,2CAClB,KAEHC,EAAAA,EAAAA,YAAU,WACRH,GACF,GAAG,CAACA,IAEJ,IAAMvC,EAAc,SAACE,GAEjBmC,EADY,QAAVnC,EACYU,EAEAA,EAAK+B,QAAO,SAAC5B,GAAI,OAAKA,EAAKX,OAASF,CAAK,IAE3D,EAEA,OACE,SAAC0C,EAAA,EAAI,CACHlB,MAAM,QACNmB,YAAY,iCAAgC,UAE5C,qBAAS1C,UAAU,gBAAgB2C,GAAG,QAAO,WAC3C,6BACE,iBAAK3C,UAAU,QAAO,WACpB,eAAI,cAAY,UAAS,UAAC,SAAC,KAAI,CAAC4C,GAAG,eAAc,0CACjD,SAAClB,EAAiB,CAACC,aAAcI,EAAWH,OAAO,kFAGvD,iBAAK5B,UAAU,yBAAwB,WACrC,SAAC6C,EAAA,EAAc,CAAChD,YAAa,kBAAMA,EAAY,MAAM,EAAEC,OAAQ,GAAIC,MAAM,SACzE,SAAC8C,EAAA,EAAc,CAAChD,YAAa,kBAAMA,EAAY,KAAK,EAAEC,OAAQ,GAAIC,MAAM,mBACxE,SAAC8C,EAAA,EAAc,CAAChD,YAAa,kBAAMA,EAAY,QAAQ,EAAEC,OAAQ,GAAIC,MAAM,eAE7E,wBACGkC,EAAaA,EAAWtB,KAAI,SAACC,GAAI,OAChC,2BACE,cAAGkC,KAAMlC,EAAKa,SAAS,UAAC,uBAAIb,EAAKY,SAAa,MAC9C,eAAGsB,KAAMlC,EAAKS,IAAI,cAAGT,EAAKW,MAAK,SAC5B,KAEH,wBAAG,+CAMjB,C","sources":["components/Resume/Skills/CategoryButton.js","data/open-source.js","pages/OpenSource.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CategoryButton = ({ handleClick, active, label }) => (\n  <button\n    className={`skillbutton ${active[label] ? 'skillbutton-active' : ''}`}\n    type=\"button\"\n    onClick={() => handleClick(label)}\n  >\n    {label}\n  </button>\n);\n\nCategoryButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  active: PropTypes.objectOf(PropTypes.bool.isRequired).isRequired,\n};\n\nexport default CategoryButton;\n","import { Octokit } from 'octokit';\n\nconst query = 'GET /search/issues?q=author:Mo-Fatah+-org:Mo-Fatah';\n\nconst filterAndMapData = (data) => (\n  data.map((item) => {\n    const splitted = item.repository_url.split('/');\n    const repoName = splitted[splitted.length - 1];\n    const repoUrl = item.repository_url.replace('api.', '').replace('repos/', '');\n    if (item.pull_request) {\n      return {\n        type: 'pr',\n        url: item.html_url,\n        title: item.title,\n        repo: repoName,\n        repo_url: repoUrl,\n      };\n    }\n    return {\n      type: 'issue',\n      url: item.html_url,\n      title: item.title,\n      repo: repoName,\n      repo_url: repoUrl,\n    };\n  })\n);\n\nconst getGithubData = async () => {\n  const octokit = new Octokit();\n\n  const resp = await octokit.request(query, {\n    per_page: 100,\n  });\n\n  return filterAndMapData(resp.data.items);\n};\n\nexport default getGithubData;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Main from '../layouts/Main';\nimport getGithubData from '../data/open-source';\nimport CategoryButton from '../components/Resume/Skills/CategoryButton';\n\n// eslint-disable-next-line\nconst BlinkingComponent = ({ highlighting, phrase }) => (\n  <p className={`blinkState${highlighting ? ' highlight' : ''}`}>{phrase}</p>\n);\n\nconst OpenSource = () => {\n  const [data, setResponseData] = useState(null);\n  const [highlight, setHighLight] = useState(false);\n  const [dataToView, setDataToView] = useState(data);\n\n  setTimeout(() => {\n    setHighLight(!highlight);\n  }, 1000);\n\n  const fetchData = useCallback(async () => {\n    const res = await getGithubData();\n    setResponseData(res);\n    setDataToView(res);\n  }, []);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  const handleClick = (label) => {\n    if (label === 'all') {\n      setDataToView(data);\n    } else {\n      setDataToView(data.filter((item) => item.type === label));\n    }\n  };\n\n  return (\n    <Main\n      title=\"About\"\n      description=\"Learn about Mohamed Abdelfatah\"\n    >\n      <article className=\"post markdown\" id=\"about\">\n        <header>\n          <div className=\"title\">\n            <h2 data-testid=\"heading\"><Link to=\"/open-source\">Open Source Contributions</Link></h2>\n            <BlinkingComponent highlighting={highlight} phrase=\" ● A live track of my Open Source Contributions Through Github API\" />\n          </div>\n        </header>\n        <div className=\"skill-button-container\">\n          <CategoryButton handleClick={() => handleClick('all')} active={[]} label=\"All\" />\n          <CategoryButton handleClick={() => handleClick('pr')} active={[]} label=\"Pull Requests\" />\n          <CategoryButton handleClick={() => handleClick('issue')} active={[]} label=\"issues\" />\n        </div>\n        <ul>\n          {dataToView ? dataToView.map((item) => (\n            <li>\n              <a href={item.repo_url}><b>{item.repo}</b></a> :\n              <a href={item.url}> {item.title} </a>\n            </li>\n          ))\n            : <p><b>loading ...</b></p>}\n\n        </ul>\n      </article>\n    </Main>\n  );\n};\n\nexport default OpenSource;\n"],"names":["handleClick","active","label","className","type","onClick","getGithubData","octokit","Octokit","request","per_page","resp","data","items","map","item","splitted","repository_url","split","repoName","length","repoUrl","replace","pull_request","url","html_url","title","repo","repo_url","BlinkingComponent","highlighting","phrase","useState","setResponseData","highlight","setHighLight","dataToView","setDataToView","setTimeout","fetchData","useCallback","res","useEffect","filter","Main","description","id","to","CategoryButton","href"],"sourceRoot":""}